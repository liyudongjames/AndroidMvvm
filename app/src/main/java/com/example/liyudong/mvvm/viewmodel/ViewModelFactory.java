package com.example.liyudong.mvvm.viewmodel;import androidx.annotation.NonNull;import androidx.lifecycle.ViewModel;import androidx.lifecycle.ViewModelProvider;import com.example.liyudong.mvvm.net.repository.ArticleListRepository;public class ViewModelFactory implements ViewModelProvider.Factory {    private static volatile ViewModelFactory INSTANCE;    private final ArticleListRepository articleListRepository;    public static ViewModelFactory getInstance() {        if (INSTANCE == null) {            synchronized (ViewModelFactory.class) {                if (INSTANCE == null) {                    INSTANCE = new ViewModelFactory(                            new ArticleListRepository()                    );                }            }        }        return INSTANCE;    }    private ViewModelFactory(ArticleListRepository repository) {        articleListRepository = repository;    }    @NonNull    @Override    public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {        if (modelClass.isAssignableFrom(ArticleListViewModel.class)) {            //noinspection unchecked            return (T) new ArticleListViewModel(articleListRepository);        }        throw new IllegalArgumentException("Unknown ViewModel class: " + modelClass.getName());    }}