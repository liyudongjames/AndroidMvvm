package com.example.liyudong.mvvm.net;import androidx.lifecycle.LiveData;import androidx.lifecycle.MutableLiveData;import com.example.liyudong.mvvm.net.bean.BaseBean;import org.reactivestreams.Subscriber;import org.reactivestreams.Subscription;public class BaseSubscribe<T> implements Subscriber<BaseBean<T>> {    private MutableLiveData<BaseBean<T>> datas;    public BaseSubscribe() {        datas = new MutableLiveData<>();    }    public LiveData<BaseBean<T>> getDatas() {        return datas;    }    @Override    public void onError(Throwable e) {        handleError(999, e.getMessage());    }    @Override    public void onNext(BaseBean<T> tBaseBean) {        if(tBaseBean.getErrorCode() == BaseBean.SUCCESS_CODE) {            this.datas.setValue(tBaseBean);            handleSuccess(tBaseBean.getErrorMsg());        }else {            handleError(tBaseBean.getErrorCode(), tBaseBean.getErrorMsg());        }    }    @Override    public void onSubscribe(Subscription s) {    }    @Override    public void onComplete() {    }    public void handleError(int errorCode, String errorMsg) {    }    public  void handleSuccess(String errorMsg) {    }}